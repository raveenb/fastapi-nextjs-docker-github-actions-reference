name: Code Quality

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Check commit messages
  commitlint:
    name: Commit Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5

  # Check for file size
  file-size:
    name: File Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check file sizes
        run: |
          # Find files larger than 1MB
          large_files=$(find . -type f -size +1M | grep -v .git || true)
          if [ ! -z "$large_files" ]; then
            echo "⚠️ Large files detected (>1MB):"
            echo "$large_files"
            exit 1
          fi
          echo "✅ No large files detected"

  # Python specific checks
  python-quality:
    name: Python Code Quality
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./src/fastapi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
      
      - name: Check code formatting with Black
        run: |
          uv run black --check app tests
      
      - name: Check import sorting with isort
        run: |
          uv run isort --check-only app tests
      
      - name: Security check with Bandit
        run: |
          uv run bandit -r app -ll
      
      - name: Check for common issues with Pylint
        run: |
          uv run pylint app --fail-under=8.0 || true

  # JavaScript/TypeScript specific checks  
  javascript-quality:
    name: JavaScript Code Quality
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./src/nextjs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'
          cache-dependency-path: src/nextjs/pnpm-lock.yaml
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Check code formatting with Prettier
        run: pnpm prettier --check .
      
      - name: Run ESLint
        run: pnpm lint
      
      - name: Check for unused dependencies
        run: |
          npx depcheck --json | jq -e '.dependencies | length == 0' || \
          (echo "⚠️ Unused dependencies found:" && npx depcheck && exit 1)

  # Docker and YAML checks
  docker-quality:
    name: Docker & YAML Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
          ignore: DL3008,DL3009
      
      - name: Validate docker-compose files
        run: |
          docker compose -f docker-compose.yml config -q
          docker compose -f docker-compose.dev.yml config -q
      
      - name: Validate GitHub Actions workflows
        run: |
          for workflow in .github/workflows/*.yml; do
            echo "Checking $workflow"
            python3 -m yaml.load < "$workflow" || exit 1
          done

  # Markdown and documentation checks
  docs-quality:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          config: |
            {
              "default": true,
              "MD013": false,
              "MD033": false,
              "MD041": false
            }
      
      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          config-file: |
            {
              "ignorePatterns": [
                {
                  "pattern": "^http://localhost"
                }
              ]
            }